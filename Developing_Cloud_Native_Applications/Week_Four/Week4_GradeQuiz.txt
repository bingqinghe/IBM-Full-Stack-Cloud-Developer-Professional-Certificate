Module 4 Graded Quiz

1. With DevOps, which teams work together to support the software lifecycle from code design to deployment to production?
  Deployment and testing
* Development and operations
  Development and security
  Deployment and operations

2. Where is DevOps code continuously delivered and integrated into?
  The IBM Cloud catalog
  The market feedback tool
* The main shared repository
  The desktop application

3. Which Continuous Delivery feature can you use to automate builds, unit tests, and deployment?
  Web IDE
  Issue tracker
* Delivery Pipeline
  Git repository

4. Fill in the blank: Using the Continuous Delivery service, you can create DevOps?toolchains to enable tool _____ that support your development, deployment, and operations tasks.
  Collaborations
  Environments
  Segmentations
* Integrations

5. Fill in the blank: The following are all ways to add a toolchain to your Continuous Delivery instance EXCEPT _____.
  Enable Continuous Delivery in an existing application
  Click Create a Toolchain on the Getting Started page that appears when you create the service
* Clone the main repository
  Add a toolchain from the catalog

6. The Continuous Delivery user interface used to create a toolchain groups the tools into which of the following four phases?  
  Think, Code, Deliver, Manage   
* Think, Code, Deliver, Run  
  Code, Delivery, Run, Manage  
  Think, Culture, Deliver, Run  

7. What IBM Cloud feature lets you debug code in the browser ?
  IDE  
* IBM Cloud Live Sync  
  ibm toolchain  
  ibmcloud CLI  

8. Which Continuous Delivery feature provides a full-featured environment for writing your application code in your web browser?  
* The Web IDE editor   
  Delivery Pipeline  
  Open toolchain  
  Markup language

9. What does enabling Continuous Delivery for an application create?  
* A Git repository to manage source code  
  Kubernetes containers  
  A pipeline job to run automated tests of code  
  IBM Cloud API Docs  

10. What are you allowed to configure for each stage in Delivery Pipeline ?
  Instances  
  Environment variables  
  CPU  
* Memory
